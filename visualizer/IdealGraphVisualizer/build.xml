<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2013, 2022, Oracle and/or its affiliates. All rights reserved.
    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.

    This code is free software; you can redistribute it and/or modify it
    under the terms of the GNU General Public License version 2 only, as
    published by the Free Software Foundation.

    This code is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    version 2 for more details (a copy is included in the LICENSE file that
    accompanied this code).

    You should have received a copy of the GNU General Public License version
    2 along with this work; if not, write to the Free Software Foundation,
    Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.

    Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
    or visit www.oracle.com if you need additional information or have any
    questions.
-->
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="IdealGraphVisualizer" basedir="." default="build">
    <description>Builds the module suite IdealGraphVisualizer.</description>
    <exec executable="git" outputproperty="git.changeset">
        <arg line="log"/>
        <arg line="-n1"/>
        <arg line="--format=%h"/>
    </exec>
    <exec executable="git" outputproperty="git.commit">
        <arg line="log"/>
        <arg line="-n1"/>
        <arg line="--format=%H"/>
    </exec>
    <property name="spotbugs.run.arguments" value="-textui -low -maxRank 15 -exitcode"/>
    <property name="git.changeset" value="unknown"/>

    <import file="nbproject/build-impl.xml"/>
    
    <target name="build-launchers" depends="suite.build-launchers">
        <copy todir="${build.launcher.dir}" overwrite="true">
            <fileset dir="${basedir}/igv/launchers"/>
        </copy>
        <replace file="${suite.build.dir}/launcher/etc/idealgraphvisualizer.conf" token="${APP_VERSION}" value="${app.version}"/>
        <echo message="platform&#10;" file="${build.launcher.dir}/etc/${app.name}.clusters" append="true"/>
    </target>
 
    <!-- Local (environment-specific) extensions/modifications to the build -->
    <import file="build-local.xml" optional="true" />

    <target name="build" depends="-init,branding,release,-hide-excluded-modules" description="Build all modules in the suite.">
        <!-- Since there are no longer real releases, use the version number plus the changeset id as the version identity. -->
        <property name="buildnumber" value="${app.version}-${git.changeset}"/>
        <subant target="netbeans" buildpath="${modules.sorted}" inheritrefs="false" inheritall="false">
            <property name="cluster.path.evaluated" value="${cluster.path.evaluated}"/> <!-- Just for speed of pre-7.0 projects -->
            <property name="harness.taskdefs.done" value="${harness.taskdefs.done}"/> <!-- optimization -->
            <property name="buildnumber" value="${buildnumber}"/>
            <property name="app.version" value="${app.version}"/>
        </subant>
        <copy todir="${suite.build.dir}/cluster" file="igv/launchers/idealgraphvisualizer/idealgraphvisualizer.icns"/>
    </target>
    
    <target name="set-cluster-permissions">
        <echo message="zipping from: ${temp.dir.rest}/java/maven/bin"/>
        <zip destfile="${dist.dir}/${final.zip.name}" update="true">
            <zipfileset dir="${temp.dir.rest}/java/maven/bin" filemode="755" prefix="idealgraphvisualizer/java/maven/bin">
                <include name="mvn"/>
                <include name="mvnDebug"/>
                <include name="mvnyjp"/>
            </zipfileset>
            <zipfileset dir="${temp.dir.rest}/extide/ant/bin" filemode="755" prefix="idealgraphvisualizer/extide/ant/bin">
                <include name="antRun"/>
                <include name="antRun.pl"/>
                <include name="runant.py"/>
                <include name="runant.pl"/>
                <include name="ant"/>
                <include name="complete-ant-cmd.pl"/>
            </zipfileset>
            <!--
            <zipfileset dir="${temp.dir.rest}/ide/bin/nativeexecution/">
                <include name="**/*"/>
            </zipfileset>
            <zipfileset basedir="${temp.dir.rest}/profiler/remote-pack-defs">
                <include name="*.sh"/>
            </zipfileset>
            <zipfileset basedir="${temp.dir.rest}/profiler/lib/deployed/">
                <include name="**/*.so"/>
                <include name="**/*.sl"/>
            </zipfileset>
            -->
        </zip>
        <fail/>
    </target>
    
    <target name="test-zip">
        <property name="restdir" location="${basedir}/build/rest"/>
        <property name="platformdir" location="${basedir}/nbplatform"/>
        <property name="testfn" location="${basedir}/build/test.zip"/>
        <delete file="${testfn}"/>
        <zip destfile="${testfn}" duplicate="preserve">
            <zipfileset dir="${platformdir}" filemode="755">
                <and>
                    <type type="file"/>
                    <executable/>
                    <present targetdir="${restdir}"/>
                </and>
            </zipfileset>
            <!-- And include the rest -->
            <zipfileset dir="${platformdir}">
                <and>
                    <type type="file"/>
                    <present targetdir="${restdir}"/>
                </and>
            </zipfileset>
        </zip>
    </target>
    
    <target name="-build-zipfile" depends="build,build-launchers" description="Builds a ZIP distribution of the suite, launchers, and selected modules from the platform.">
        <mkdir dir="${dist.dir}"/>
        <tempfile property="temp.dir.nbexec" destdir="${suite.build.dir}" deleteonexit="true" prefix="nbexec"/>
        <tempfile property="temp.dir.rest" destdir="${suite.build.dir}" deleteonexit="delete" prefix="rest"/>
        <subant genericantfile="${harness.dir}/suite.xml" target="copy-cluster" inheritrefs="true">
            <property name="dest.dir" value="${temp.dir.rest}"/>
            <property name="nbexec.dir" value="${temp.dir.nbexec}"/>
            <property name="build.dir" value="${suite.build.dir}"/>
            <property name="app.version" value="${app.version}"/>
            <resources refid="zip.platform.clusters"/>
        </subant>
        <zip destfile="${dist.dir}/${app.name}.zip" duplicate="preserve">
            <zipfileset dir="${build.launcher.dir}/bin/" filemode="755" prefix="${app.name}/bin"/>
            <zipfileset dir="${build.launcher.dir}/etc/" prefix="${app.name}/etc"/>
            
            <!-- 
                First include files form the platform, that have been copied out to the temp directory.
                Choose just executable files
            -->
            <zipfileset dir="${nbplatform.default.netbeans.dest.dir}" filemode="755" prefix="${app.name}">
                <and>
                    <type type="file"/>
                    <executable/>
                    <or>
                        <present targetdir="${temp.dir.rest}"/>
                        <present targetdir="${temp.dir.nbexec}"/>
                    </or>
                </and>
            </zipfileset>
            <!-- Append all files in temp dir(s), will not overwrite existing files and their exec state -->
            <zipfileset dir="${temp.dir.nbexec}" prefix="${app.name}"/>
            <zipfileset dir="${temp.dir.rest}" prefix="${app.name}"/>

            <!-- Yes, the doubled app.name is a bit ugly, but better than the alternative; cf. #66441: -->
            <zipfileset dir="${cluster}" prefix="${app.name}/${app.name}">
                <exclude name="config/Modules/*.xml_hidden"/>
            </zipfileset>
    
            <!-- 
                This is for IGV content: since we have to make the zip manually,
                it's useless to rebuild the zip again.
            -->
            <zipfileset dir="${basedir}/.." prefix="idealgraphvisualizer/">
                <include name="Readme.md"/>
                <include name="release"/>
            </zipfileset>
            <zipfileset dir="${basedir}" prefix="idealgraphvisualizer/">
                <include name="LICENSE"/>
                <include name="3rd_party_licenses.txt"/>
            </zipfileset>
        </zip>
    </target>

    <target name="-prepare-zipfile" depends="-build-zipfile,-build-release-file">
        <property name="final.zip.name" value="${app.name}-${buildnumber}-all.zip"/>
        <move file="${dist.dir}/${app.name}.zip" tofile="${dist.dir}/${final.zip.name}"/>
    </target>
    
    <target name="build-zip" depends="-prepare-zipfile">
        <delete dir="${dist.dir}/${app.name}" />
        <unzip dest="${dist.dir}/out/" src="${dist.dir}/${final.zip.name}" overwrite="true" scanforunicodeextrafields="true"/>
        <move file="${dist.dir}/out/${app.name}" toFile="${dist.dir}/${app.name}"/>
    </target>
    
    <target name="-build-release-file" >
        <copy todir="${basedir}/.." overwrite="true">
            <fileset file="${basedir}/igv/release"/>
        </copy>
        <replace file="${basedir}/../release" token="${GIT_COMMIT}" value="${git.commit}"/>
    </target>
    
    <target name="patch-test">
        <replaceregexp file="${nbplatform.default.netbeans.dest.dir}/harness/common.xml" match="&lt;fail.*Some tests failed.*/fail&gt;" replace="&lt;fail if='tests.failed'/&gt;"/>
    </target>
    
    <target name="test-launcher" depends="build-zip">
        <property name="dist.unzip.dir" location="${dist.dir}"/>
        <unzip dest="${dist.unzip.dir}" src="${dist.dir}/${final.zip.name}"/>        
        <ant dir="Upgrade" target="test-migration"/>
    </target>
    
    <import file="nbproject/platform.xml"/>
    <target name="distclean" depends="clean,platform.clean"/>
    
    <condition property="spotbugs.file" value="spotbugs">
        <and>
            <available file="${spotbugs.lib}/spotbugs.jar"/>
            <available file="${spotbugs.lib}/spotbugs-ant.jar"/>
        </and>
    </condition>

    <condition property="spotbugs.file" value="findbugs">
        <and>
            <available file="${spotbugs.lib}/findbugs.jar"/>
            <available file="${spotbugs.lib}/findbugs-ant.jar"/>
        </and>
    </condition>
    
    <target name="-spotbugs-check" unless="spotbugs.file">
        <fail message="$${spotbugs.lib} not defined, or does not point to the required files"/>
    </target>
    
    <target name="-spotbugs.init" depends="-init,-spotbugs-check">
        <!-- Spotbugs main and and task JAR -->
        <property name="spotbugs.ant.jar" location="${spotbugs.lib}/${spotbugs.file}-ant.jar"/>
        <property name="spotbugs.main.jar" location="${spotbugs.lib}/${spotbugs.file}.jar"/>
        <property name="spotbugs.results" location="${suite.build.dir}/spotbugs.results"/>
        <!-- Spotbugs classpath -->
        <path id="spotbugs.classpath">
            <fileset dir="${spotbugs.lib}">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>
    
    <target name="spotbugs" depends="-spotbugs.init">
        <taskdef name="spotbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
                 classpathref="spotbugs.classpath"/>
        
        <path id="spotbugs.aux.path">
            <fileset dir="${nbplatform.default.netbeans.dest.dir}">
                <!-- Include just certain clusters -->
                <include name="ide/**/*.jar"/>
                <include name="nb/**/*.jar"/>
                <include name="platform/**/*.jar"/>
                <include name="java/**/*.jar"/>
                <include name="webcommon/**/*.jar"/>
                <!-- Also include Graal SDK and GraphIO -->
            </fileset>
        </path>
        
        <path id="spotbugs.analyze.path">
            <fileset dir="${suite.build.dir}/cluster">
                <exclude name="**/modules/ext/*.jar"/>
                <include name="**/*.jar"/>
            </fileset>
        </path>
        
        <pathconvert property="spotbugs.analyze.arglist" refid="spotbugs.analyze.path" pathsep=" "/>
        <pathconvert property="spotbugs.analyze.lines" refid="spotbugs.analyze.path" pathsep="${line.separator}&#09;"/>
        <echo message="Running spotbugs on:${line.separator}&#09;${spotbugs.analyze.lines}"/>
        <java jar="${spotbugs.main.jar}" classpathref="spotbugs.classpath" fork="true" failonerror="true">
            <arg line="${spotbugs.run.arguments}"/>
            <arg line="-auxclasspath"/>
            <arg pathref="spotbugs.aux.path"/>
            <arg line="-output ${spotbugs.results}"/>
            <arg line="${spotbugs.analyze.arglist}"/>
        </java>
    </target>
</project>
