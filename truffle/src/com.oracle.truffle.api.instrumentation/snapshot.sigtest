#Signature file v4.1
#Version 

CLSS public final com.oracle.truffle.api.instrumentation.AllocationEvent
meth public com.oracle.truffle.api.nodes.LanguageInfo getLanguage()
meth public java.lang.Object getValue()
meth public long getNewSize()
meth public long getOldSize()
supr java.lang.Object
hfds language,newSize,oldSize,value

CLSS public final com.oracle.truffle.api.instrumentation.AllocationEventFilter
fld public final static com.oracle.truffle.api.instrumentation.AllocationEventFilter ANY
innr public Builder
meth public static com.oracle.truffle.api.instrumentation.AllocationEventFilter$Builder newBuilder()
supr java.lang.Object
hfds languageSet

CLSS public com.oracle.truffle.api.instrumentation.AllocationEventFilter$Builder
 outer com.oracle.truffle.api.instrumentation.AllocationEventFilter
meth public !varargs com.oracle.truffle.api.instrumentation.AllocationEventFilter$Builder languages(com.oracle.truffle.api.nodes.LanguageInfo[])
meth public com.oracle.truffle.api.instrumentation.AllocationEventFilter build()
supr java.lang.Object
hfds langs

CLSS public abstract interface com.oracle.truffle.api.instrumentation.AllocationListener
meth public abstract void onEnter(com.oracle.truffle.api.instrumentation.AllocationEvent)
meth public abstract void onReturnValue(com.oracle.truffle.api.instrumentation.AllocationEvent)

CLSS public final com.oracle.truffle.api.instrumentation.AllocationReporter
fld public final static long SIZE_UNKNOWN = -9223372036854775808
meth public boolean isActive()
meth public void addActiveListener(java.util.function.Consumer<java.lang.Boolean>)
meth public void onEnter(java.lang.Object,long,long)
meth public void onReturnValue(java.lang.Object,long,long)
meth public void removeActiveListener(java.util.function.Consumer<java.lang.Boolean>)
supr java.lang.Object
hfds activeListeners,language,listeners,listenersNotChangedAssumption,valueCheck

CLSS public abstract interface com.oracle.truffle.api.instrumentation.ContextsListener
meth public abstract void onContextClosed(com.oracle.truffle.api.TruffleContext)
meth public abstract void onContextCreated(com.oracle.truffle.api.TruffleContext)
meth public abstract void onLanguageContextCreated(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public abstract void onLanguageContextDisposed(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public abstract void onLanguageContextFinalized(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public abstract void onLanguageContextInitialized(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public void onContextResetLimits(com.oracle.truffle.api.TruffleContext)
meth public void onLanguageContextCreate(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public void onLanguageContextCreateFailed(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public void onLanguageContextInitialize(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public void onLanguageContextInitializeFailed(com.oracle.truffle.api.TruffleContext,com.oracle.truffle.api.nodes.LanguageInfo)

CLSS public com.oracle.truffle.api.instrumentation.EventBinding<%0 extends java.lang.Object>
meth public boolean isDisposed()
meth public final boolean isAttached()
meth public final boolean tryAttach()
meth public final void attach()
meth public void dispose()
meth public {com.oracle.truffle.api.instrumentation.EventBinding%0} getElement()
supr java.lang.Object
hfds attached,attachedSemaphore,disposed,disposing,element,instrumenter
hcls Allocation,Execution,LoadNearestSection,LoadSource,LoadedNotifier,NearestExecution,NearestSourceSection,Source,SourceExecuted,SourceLoaded,SourceSectionLoaded

CLSS public final com.oracle.truffle.api.instrumentation.EventContext
meth public boolean hasTag(java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>)
meth public boolean isLanguageContextInitialized()
meth public com.oracle.truffle.api.instrumentation.ExecutionEventNode lookupExecutionEventNode(com.oracle.truffle.api.instrumentation.EventBinding<? extends com.oracle.truffle.api.instrumentation.ExecutionEventNodeFactory>)
meth public com.oracle.truffle.api.nodes.Node getInstrumentedNode()
meth public com.oracle.truffle.api.source.SourceSection getInstrumentedSourceSection()
meth public java.lang.Object getNodeObject()
meth public java.lang.RuntimeException createError(java.lang.RuntimeException)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="21.3")
meth public java.lang.String toString()
meth public java.lang.ThreadDeath createUnwind(java.lang.Object)
meth public java.lang.ThreadDeath createUnwind(java.lang.Object,com.oracle.truffle.api.instrumentation.EventBinding<?>)
meth public java.util.Iterator<com.oracle.truffle.api.instrumentation.ExecutionEventNode> lookupExecutionEventNodes(java.util.Collection<com.oracle.truffle.api.instrumentation.EventBinding<? extends com.oracle.truffle.api.instrumentation.ExecutionEventNodeFactory>>)
supr java.lang.Object
hfds nodeObject,probeNode,sourceSection

CLSS public final com.oracle.truffle.api.instrumentation.ExecuteSourceEvent
meth public com.oracle.truffle.api.source.Source getSource()
supr java.lang.Object
hfds source

CLSS public abstract interface com.oracle.truffle.api.instrumentation.ExecuteSourceListener
meth public abstract void onExecute(com.oracle.truffle.api.instrumentation.ExecuteSourceEvent)

CLSS public abstract interface com.oracle.truffle.api.instrumentation.ExecutionEventListener
meth public abstract void onEnter(com.oracle.truffle.api.instrumentation.EventContext,com.oracle.truffle.api.frame.VirtualFrame)
meth public abstract void onReturnExceptional(com.oracle.truffle.api.instrumentation.EventContext,com.oracle.truffle.api.frame.VirtualFrame,java.lang.Throwable)
meth public abstract void onReturnValue(com.oracle.truffle.api.instrumentation.EventContext,com.oracle.truffle.api.frame.VirtualFrame,java.lang.Object)
meth public java.lang.Object onUnwind(com.oracle.truffle.api.instrumentation.EventContext,com.oracle.truffle.api.frame.VirtualFrame,java.lang.Object)
meth public void onInputValue(com.oracle.truffle.api.instrumentation.EventContext,com.oracle.truffle.api.frame.VirtualFrame,com.oracle.truffle.api.instrumentation.EventContext,int,java.lang.Object)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="20.0")

CLSS public abstract com.oracle.truffle.api.instrumentation.ExecutionEventNode
cons protected init()
meth protected final com.oracle.truffle.api.instrumentation.EventContext getInputContext(int)
meth protected final int getInputCount()
meth protected final java.lang.Object[] getSavedInputValues(com.oracle.truffle.api.frame.VirtualFrame)
meth protected final void saveInputValue(com.oracle.truffle.api.frame.VirtualFrame,int,java.lang.Object)
meth protected java.lang.Object onUnwind(com.oracle.truffle.api.frame.VirtualFrame,java.lang.Object)
meth protected void onDispose(com.oracle.truffle.api.frame.VirtualFrame)
meth protected void onEnter(com.oracle.truffle.api.frame.VirtualFrame)
meth protected void onInputValue(com.oracle.truffle.api.frame.VirtualFrame,com.oracle.truffle.api.instrumentation.EventContext,int,java.lang.Object)
meth protected void onReturnExceptional(com.oracle.truffle.api.frame.VirtualFrame,java.lang.Throwable)
meth protected void onReturnValue(com.oracle.truffle.api.frame.VirtualFrame,java.lang.Object)
supr com.oracle.truffle.api.nodes.Node

CLSS public abstract interface com.oracle.truffle.api.instrumentation.ExecutionEventNodeFactory
meth public abstract com.oracle.truffle.api.instrumentation.ExecutionEventNode create(com.oracle.truffle.api.instrumentation.EventContext)

CLSS public abstract interface !annotation com.oracle.truffle.api.instrumentation.GenerateWrapper
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=CLASS)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
innr public abstract interface static !annotation Ignore
innr public abstract interface static !annotation IncomingConverter
innr public abstract interface static !annotation OutgoingConverter
intf java.lang.annotation.Annotation

CLSS public abstract interface static !annotation com.oracle.truffle.api.instrumentation.GenerateWrapper$Ignore
 outer com.oracle.truffle.api.instrumentation.GenerateWrapper
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=CLASS)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface static !annotation com.oracle.truffle.api.instrumentation.GenerateWrapper$IncomingConverter
 outer com.oracle.truffle.api.instrumentation.GenerateWrapper
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=CLASS)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface static !annotation com.oracle.truffle.api.instrumentation.GenerateWrapper$OutgoingConverter
 outer com.oracle.truffle.api.instrumentation.GenerateWrapper
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=CLASS)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[METHOD])
intf java.lang.annotation.Annotation

CLSS public abstract interface com.oracle.truffle.api.instrumentation.InstrumentableNode
innr public abstract interface static WrapperNode
intf com.oracle.truffle.api.nodes.NodeInterface
meth public abstract boolean isInstrumentable()
meth public abstract com.oracle.truffle.api.instrumentation.InstrumentableNode$WrapperNode createWrapper(com.oracle.truffle.api.instrumentation.ProbeNode)
meth public boolean hasTag(java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>)
meth public com.oracle.truffle.api.instrumentation.InstrumentableNode materializeInstrumentableNodes(java.util.Set<java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>>)
meth public com.oracle.truffle.api.nodes.Node findNearestNodeAt(int,int,java.util.Set<java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>>)
meth public com.oracle.truffle.api.nodes.Node findNearestNodeAt(int,java.util.Set<java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>>)
meth public java.lang.Object getNodeObject()
meth public static com.oracle.truffle.api.nodes.Node findInstrumentableParent(com.oracle.truffle.api.nodes.Node)

CLSS public abstract interface static com.oracle.truffle.api.instrumentation.InstrumentableNode$WrapperNode
 outer com.oracle.truffle.api.instrumentation.InstrumentableNode
intf com.oracle.truffle.api.nodes.NodeInterface
meth public abstract com.oracle.truffle.api.instrumentation.ProbeNode getProbeNode()
meth public abstract com.oracle.truffle.api.nodes.Node getDelegateNode()

CLSS public abstract com.oracle.truffle.api.instrumentation.Instrumenter
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.AllocationListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachAllocationListener(com.oracle.truffle.api.instrumentation.AllocationEventFilter,{%%0})
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ContextsListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachContextsListener({%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ExecuteSourceListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachExecuteSourceListener(com.oracle.truffle.api.instrumentation.SourceFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ExecuteSourceListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> createExecuteSourceBinding(com.oracle.truffle.api.instrumentation.SourceFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ExecutionEventListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachExecutionEventListener(com.oracle.truffle.api.instrumentation.SourceSectionFilter,com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0})
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="20.0")
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ExecutionEventNodeFactory> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachExecutionEventFactory(com.oracle.truffle.api.instrumentation.NearestSectionFilter,com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0})
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ExecutionEventNodeFactory> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachExecutionEventFactory(com.oracle.truffle.api.instrumentation.SourceSectionFilter,com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0})
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachLoadSourceListener(com.oracle.truffle.api.instrumentation.SourceFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachLoadSourceListener(com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0},boolean)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="19.0")
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> createLoadSourceBinding(com.oracle.truffle.api.instrumentation.SourceFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceSectionListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachLoadSourceSectionListener(com.oracle.truffle.api.instrumentation.NearestSectionFilter,com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceSectionListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachLoadSourceSectionListener(com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceSectionListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> createLoadSourceSectionBinding(com.oracle.truffle.api.instrumentation.NearestSectionFilter,com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.LoadSourceSectionListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> createLoadSourceSectionBinding(com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0},boolean)
meth public abstract <%0 extends com.oracle.truffle.api.instrumentation.ThreadsListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachThreadsListener({%%0},boolean)
meth public abstract <%0 extends java.io.OutputStream> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachErrConsumer({%%0})
meth public abstract <%0 extends java.io.OutputStream> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachOutConsumer({%%0})
meth public abstract com.oracle.truffle.api.instrumentation.EventBinding<? extends com.oracle.truffle.api.instrumentation.ThreadsActivationListener> attachThreadsActivationListener(com.oracle.truffle.api.instrumentation.ThreadsActivationListener)
meth public abstract com.oracle.truffle.api.instrumentation.ExecutionEventNode lookupExecutionEventNode(com.oracle.truffle.api.nodes.Node,com.oracle.truffle.api.instrumentation.EventBinding<?>)
meth public abstract java.util.Set<java.lang.Class<?>> queryTags(com.oracle.truffle.api.nodes.Node)
meth public abstract void visitLoadedSourceSections(com.oracle.truffle.api.instrumentation.SourceSectionFilter,com.oracle.truffle.api.instrumentation.LoadSourceSectionListener)
meth public final <%0 extends com.oracle.truffle.api.instrumentation.ExecutionEventListener> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachExecutionEventListener(com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0})
meth public final <%0 extends com.oracle.truffle.api.instrumentation.ExecutionEventNodeFactory> com.oracle.truffle.api.instrumentation.EventBinding<{%%0}> attachExecutionEventFactory(com.oracle.truffle.api.instrumentation.SourceSectionFilter,{%%0})
meth public final java.util.List<com.oracle.truffle.api.source.SourceSection> querySourceSections(com.oracle.truffle.api.instrumentation.SourceSectionFilter)
supr java.lang.Object

CLSS public final com.oracle.truffle.api.instrumentation.LoadSourceEvent
meth public com.oracle.truffle.api.source.Source getSource()
supr java.lang.Object
hfds source

CLSS public abstract interface com.oracle.truffle.api.instrumentation.LoadSourceListener
meth public abstract void onLoad(com.oracle.truffle.api.instrumentation.LoadSourceEvent)

CLSS public final com.oracle.truffle.api.instrumentation.LoadSourceSectionEvent
meth public com.oracle.truffle.api.nodes.Node getNode()
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
supr java.lang.Object
hfds node,sourceSection

CLSS public abstract interface com.oracle.truffle.api.instrumentation.LoadSourceSectionListener
meth public abstract void onLoad(com.oracle.truffle.api.instrumentation.LoadSourceSectionEvent)

CLSS public final com.oracle.truffle.api.instrumentation.NearestSectionFilter
innr public final static Builder
meth public java.lang.String toString()
meth public static com.oracle.truffle.api.instrumentation.NearestSectionFilter$Builder newBuilder(int,int)
supr java.lang.Object
hfds anchorStart,position,tagClasses,tags

CLSS public final static com.oracle.truffle.api.instrumentation.NearestSectionFilter$Builder
 outer com.oracle.truffle.api.instrumentation.NearestSectionFilter
meth public !varargs com.oracle.truffle.api.instrumentation.NearestSectionFilter$Builder tagIs(java.lang.Class<?>[])
meth public com.oracle.truffle.api.instrumentation.NearestSectionFilter build()
meth public com.oracle.truffle.api.instrumentation.NearestSectionFilter$Builder anchorStart(boolean)
supr java.lang.Object
hfds anchorStart,column,line,theTags

CLSS public final com.oracle.truffle.api.instrumentation.ProbeNode
fld public final static java.lang.Object UNWIND_ACTION_REENTER
meth public com.oracle.truffle.api.nodes.Node copy()
meth public com.oracle.truffle.api.nodes.NodeCost getCost()
meth public java.lang.Object onReturnExceptionalOrUnwind(com.oracle.truffle.api.frame.VirtualFrame,java.lang.Throwable,boolean)
meth public void onEnter(com.oracle.truffle.api.frame.VirtualFrame)
meth public void onReturnValue(com.oracle.truffle.api.frame.VirtualFrame,java.lang.Object)
supr com.oracle.truffle.api.nodes.Node
hfds SEEN_REENTER,SEEN_RETURN,SEEN_UNWIND,SEEN_UNWIND_NEXT,UNWIND_ACTION_IGNORED,chain,context,handler,retiredNodeReference,seen,version
hcls EventChainNode,EventFilterChainNode,EventProviderChainNode,EventProviderWithInputChainNode,InputChildContextLookup,InputChildIndexLookup,InputValueChainNode,InstrumentableChildVisitor,RetiredNodeReference

CLSS public abstract interface !annotation com.oracle.truffle.api.instrumentation.ProvidedTags
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.Class<?>[] value()

CLSS public final com.oracle.truffle.api.instrumentation.SourceFilter
fld public final static com.oracle.truffle.api.instrumentation.SourceFilter ANY
innr public final Builder
meth public static com.oracle.truffle.api.instrumentation.SourceFilter$Builder newBuilder()
supr java.lang.Object
hfds expressions

CLSS public final com.oracle.truffle.api.instrumentation.SourceFilter$Builder
 outer com.oracle.truffle.api.instrumentation.SourceFilter
meth public !varargs com.oracle.truffle.api.instrumentation.SourceFilter$Builder languageIs(java.lang.String[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceFilter$Builder sourceIs(com.oracle.truffle.api.source.Source[])
meth public com.oracle.truffle.api.instrumentation.SourceFilter build()
meth public com.oracle.truffle.api.instrumentation.SourceFilter$Builder includeInternal(boolean)
meth public com.oracle.truffle.api.instrumentation.SourceFilter$Builder sourceIs(java.util.function.Predicate<com.oracle.truffle.api.source.Source>)
supr java.lang.Object
hfds expressions,includeInternal

CLSS public final com.oracle.truffle.api.instrumentation.SourceSectionFilter
fld public final static com.oracle.truffle.api.instrumentation.SourceSectionFilter ANY
innr public abstract interface static SourcePredicate
innr public final Builder
innr public final static IndexRange
meth public boolean includes(com.oracle.truffle.api.nodes.Node)
meth public boolean includes(com.oracle.truffle.api.nodes.RootNode,com.oracle.truffle.api.source.SourceSection,java.util.Set<java.lang.Class<?>>)
meth public java.lang.String toString()
meth public static com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder newBuilder()
supr java.lang.Object
hfds TAGGED_NODE_CACHE,expressions
hcls EventFilterExpression,Not,TaggedNode

CLSS public final com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder
 outer com.oracle.truffle.api.instrumentation.SourceSectionFilter
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder columnEndsIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder columnIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder columnNotIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder columnStartsIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder indexIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder indexNotIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder lineEndsIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder lineIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder lineNotIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder lineStartsIn(com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder mimeTypeIs(java.lang.String[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder rootSourceSectionEquals(com.oracle.truffle.api.source.SourceSection[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder sourceIs(com.oracle.truffle.api.source.Source[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder sourceSectionEquals(com.oracle.truffle.api.source.SourceSection[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder tagIs(java.lang.Class<?>[])
meth public !varargs com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder tagIsNot(java.lang.Class<?>[])
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter build()
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder and(com.oracle.truffle.api.instrumentation.SourceSectionFilter)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder columnIn(int,int)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder includeInternal(boolean)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder indexIn(int,int)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder lineIn(int,int)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder lineIs(int)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder rootNameIs(java.util.function.Predicate<java.lang.String>)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder sourceFilter(com.oracle.truffle.api.instrumentation.SourceFilter)
meth public com.oracle.truffle.api.instrumentation.SourceSectionFilter$Builder sourceIs(com.oracle.truffle.api.instrumentation.SourceSectionFilter$SourcePredicate)
supr java.lang.Object
hfds expressions,includeInternal

CLSS public final static com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange
 outer com.oracle.truffle.api.instrumentation.SourceSectionFilter
meth public java.lang.String toString()
meth public static com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange between(int,int)
meth public static com.oracle.truffle.api.instrumentation.SourceSectionFilter$IndexRange byLength(int,int)
supr java.lang.Object
hfds endIndex,startIndex

CLSS public abstract interface static com.oracle.truffle.api.instrumentation.SourceSectionFilter$SourcePredicate
 outer com.oracle.truffle.api.instrumentation.SourceSectionFilter
intf java.util.function.Predicate<com.oracle.truffle.api.source.Source>
meth public abstract boolean test(com.oracle.truffle.api.source.Source)

CLSS public final com.oracle.truffle.api.instrumentation.StandardTags
innr public final static CallTag
innr public final static ExpressionTag
innr public final static ReadVariableTag
innr public final static RootBodyTag
innr public final static RootTag
innr public final static StatementTag
innr public final static TryBlockTag
innr public final static WriteVariableTag
supr java.lang.Object
hfds ALL_TAGS

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$CallTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$ExpressionTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$ReadVariableTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
fld public final static java.lang.String NAME = "readVariableName"
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$RootBodyTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$RootTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$StatementTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$TryBlockTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
fld public final static java.lang.String CATCHES = "catches"
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final static com.oracle.truffle.api.instrumentation.StandardTags$WriteVariableTag
 outer com.oracle.truffle.api.instrumentation.StandardTags
fld public final static java.lang.String NAME = "writeVariableName"
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public abstract com.oracle.truffle.api.instrumentation.Tag
cons protected init()
innr public abstract interface static !annotation Identifier
meth public static java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag> findProvidedTag(com.oracle.truffle.api.nodes.LanguageInfo,java.lang.String)
meth public static java.lang.String getIdentifier(java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>)
supr java.lang.Object

CLSS public abstract interface static !annotation com.oracle.truffle.api.instrumentation.Tag$Identifier
 outer com.oracle.truffle.api.instrumentation.Tag
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.String value()

CLSS public abstract interface com.oracle.truffle.api.instrumentation.ThreadsActivationListener
meth public abstract void onEnterThread(com.oracle.truffle.api.TruffleContext)
meth public abstract void onLeaveThread(com.oracle.truffle.api.TruffleContext)

CLSS public abstract interface com.oracle.truffle.api.instrumentation.ThreadsListener
meth public abstract void onThreadDisposed(com.oracle.truffle.api.TruffleContext,java.lang.Thread)
meth public abstract void onThreadInitialized(com.oracle.truffle.api.TruffleContext,java.lang.Thread)

CLSS public abstract com.oracle.truffle.api.instrumentation.TruffleInstrument
cons protected init()
fld protected final com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextLocalProvider locals
innr protected abstract interface static ContextLocalFactory
innr protected abstract interface static ContextThreadLocalFactory
innr protected final static ContextLocalProvider
innr public abstract interface static !annotation Registration
innr public abstract interface static Provider
innr public final static Env
meth protected abstract void onCreate(com.oracle.truffle.api.instrumentation.TruffleInstrument$Env)
meth protected final <%0 extends java.lang.Object> com.oracle.truffle.api.ContextLocal<{%%0}> createContextLocal(com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextLocalFactory<{%%0}>)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="")
meth protected final <%0 extends java.lang.Object> com.oracle.truffle.api.ContextThreadLocal<{%%0}> createContextThreadLocal(com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextThreadLocalFactory<{%%0}>)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="")
meth protected org.graalvm.options.OptionDescriptors getContextOptionDescriptors()
meth protected org.graalvm.options.OptionDescriptors getOptionDescriptors()
meth protected void onDispose(com.oracle.truffle.api.instrumentation.TruffleInstrument$Env)
meth protected void onFinalize(com.oracle.truffle.api.instrumentation.TruffleInstrument$Env)
supr java.lang.Object

CLSS protected final static com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextLocalProvider
 outer com.oracle.truffle.api.instrumentation.TruffleInstrument
meth public <%0 extends java.lang.Object> com.oracle.truffle.api.ContextLocal<{%%0}> createContextLocal(com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextLocalFactory<{%%0}>)
meth public <%0 extends java.lang.Object> com.oracle.truffle.api.ContextThreadLocal<{%%0}> createContextThreadLocal(com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextThreadLocalFactory<{%%0}>)
supr java.lang.Object
hfds contextLocals,contextThreadLocals

CLSS protected abstract interface static com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextLocalFactory<%0 extends java.lang.Object>
 outer com.oracle.truffle.api.instrumentation.TruffleInstrument
 anno 0 java.lang.FunctionalInterface()
meth public abstract {com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextLocalFactory%0} create(com.oracle.truffle.api.TruffleContext)

CLSS protected abstract interface static com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextThreadLocalFactory<%0 extends java.lang.Object>
 outer com.oracle.truffle.api.instrumentation.TruffleInstrument
 anno 0 java.lang.FunctionalInterface()
meth public abstract {com.oracle.truffle.api.instrumentation.TruffleInstrument$ContextThreadLocalFactory%0} create(com.oracle.truffle.api.TruffleContext,java.lang.Thread)

CLSS public final static com.oracle.truffle.api.instrumentation.TruffleInstrument$Env
 outer com.oracle.truffle.api.instrumentation.TruffleInstrument
meth public !varargs com.oracle.truffle.api.CallTarget parse(com.oracle.truffle.api.source.Source,java.lang.String[]) throws java.io.IOException
meth public <%0 extends java.lang.Object> {%%0} lookup(com.oracle.truffle.api.InstrumentInfo,java.lang.Class<{%%0}>)
meth public <%0 extends java.lang.Object> {%%0} lookup(com.oracle.truffle.api.nodes.LanguageInfo,java.lang.Class<{%%0}>)
meth public boolean isEngineRoot(com.oracle.truffle.api.nodes.RootNode)
meth public com.oracle.truffle.api.TruffleContext getEnteredContext()
meth public com.oracle.truffle.api.TruffleFile getInternalResource(java.lang.Class<? extends com.oracle.truffle.api.InternalResource>) throws java.io.IOException
meth public com.oracle.truffle.api.TruffleFile getInternalResource(java.lang.String) throws java.io.IOException
meth public com.oracle.truffle.api.TruffleFile getTruffleFile(com.oracle.truffle.api.TruffleContext,java.lang.String)
meth public com.oracle.truffle.api.TruffleFile getTruffleFile(com.oracle.truffle.api.TruffleContext,java.net.URI)
meth public com.oracle.truffle.api.TruffleFile getTruffleFile(java.lang.String)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="")
meth public com.oracle.truffle.api.TruffleFile getTruffleFile(java.net.URI)
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="")
meth public com.oracle.truffle.api.TruffleLogger getLogger(java.lang.Class<?>)
meth public com.oracle.truffle.api.TruffleLogger getLogger(java.lang.String)
meth public com.oracle.truffle.api.instrumentation.Instrumenter getInstrumenter()
meth public com.oracle.truffle.api.nodes.ExecutableNode parseInline(com.oracle.truffle.api.source.Source,com.oracle.truffle.api.nodes.Node,com.oracle.truffle.api.frame.MaterializedFrame)
meth public com.oracle.truffle.api.nodes.LanguageInfo getLanguageInfo(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>)
meth public java.io.InputStream in()
meth public java.io.OutputStream err()
meth public java.io.OutputStream out()
meth public java.lang.Object getLanguageView(com.oracle.truffle.api.nodes.LanguageInfo,java.lang.Object)
meth public java.lang.Object getPolyglotBindings()
meth public java.lang.Object getScope(com.oracle.truffle.api.nodes.LanguageInfo)
meth public java.lang.Thread createSystemThread(java.lang.Runnable)
meth public java.lang.Thread createSystemThread(java.lang.Runnable,java.lang.ThreadGroup)
meth public java.util.Map<java.lang.String,com.oracle.truffle.api.InstrumentInfo> getInstruments()
meth public java.util.Map<java.lang.String,com.oracle.truffle.api.nodes.LanguageInfo> getLanguages()
meth public java.util.concurrent.Future<java.lang.Void> submitThreadLocal(com.oracle.truffle.api.TruffleContext,java.lang.Thread[],com.oracle.truffle.api.ThreadLocalAction)
meth public long calculateContextHeapSize(com.oracle.truffle.api.TruffleContext,long,java.util.concurrent.atomic.AtomicBoolean)
meth public org.graalvm.options.OptionValues getOptions()
meth public org.graalvm.options.OptionValues getOptions(com.oracle.truffle.api.TruffleContext)
meth public org.graalvm.polyglot.SandboxPolicy getSandboxPolicy()
meth public org.graalvm.polyglot.io.MessageEndpoint startServer(java.net.URI,org.graalvm.polyglot.io.MessageEndpoint) throws java.io.IOException,org.graalvm.polyglot.io.MessageTransport$VetoException
meth public void registerService(java.lang.Object)
meth public void setAsynchronousStackDepth(int)
supr java.lang.Object
hfds err,in,instrumenter,messageTransport,options,out,polyglotInstrument,services
hcls GuardedExecutableNode,MessageTransportProxy

CLSS public abstract interface static com.oracle.truffle.api.instrumentation.TruffleInstrument$Provider
 outer com.oracle.truffle.api.instrumentation.TruffleInstrument
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="23.1")
meth public abstract com.oracle.truffle.api.instrumentation.TruffleInstrument create()
meth public abstract java.lang.String getInstrumentClassName()
meth public abstract java.util.Collection<java.lang.String> getServicesClassNames()

CLSS public abstract interface static !annotation com.oracle.truffle.api.instrumentation.TruffleInstrument$Registration
 outer com.oracle.truffle.api.instrumentation.TruffleInstrument
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean internal()
meth public abstract !hasdefault java.lang.Class<? extends com.oracle.truffle.api.InternalResource>[] internalResources()
meth public abstract !hasdefault java.lang.Class<?>[] services()
meth public abstract !hasdefault java.lang.String id()
meth public abstract !hasdefault java.lang.String name()
meth public abstract !hasdefault java.lang.String version()
meth public abstract !hasdefault java.lang.String website()
meth public abstract !hasdefault org.graalvm.polyglot.SandboxPolicy sandbox()

CLSS public abstract com.oracle.truffle.api.instrumentation.provider.TruffleInstrumentProvider
cons protected init()
meth protected abstract java.lang.Object create()
meth protected abstract java.lang.String getInstrumentClassName()
meth protected abstract java.util.Collection<java.lang.String> getServicesClassNames()
meth protected java.lang.Object createInternalResource(java.lang.String)
meth protected java.util.List<java.lang.String> getInternalResourceIds()
supr java.lang.Object

CLSS public abstract com.oracle.truffle.api.nodes.Node
cons protected init()
innr public abstract interface static !annotation Child
innr public abstract interface static !annotation Children
intf com.oracle.truffle.api.nodes.NodeInterface
intf java.lang.Cloneable
meth protected final java.util.concurrent.locks.Lock getLock()
meth protected final void notifyInserted(com.oracle.truffle.api.nodes.Node)
meth protected void onReplace(com.oracle.truffle.api.nodes.Node,java.lang.CharSequence)
meth public boolean isAdoptable()
meth public com.oracle.truffle.api.nodes.Node copy()
meth public com.oracle.truffle.api.nodes.Node deepCopy()
meth public com.oracle.truffle.api.nodes.NodeCost getCost()
meth public com.oracle.truffle.api.source.SourceSection getEncapsulatingSourceSection()
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
meth public final <%0 extends com.oracle.truffle.api.nodes.Node> {%%0} insert({%%0})
meth public final <%0 extends com.oracle.truffle.api.nodes.Node> {%%0} replace({%%0})
meth public final <%0 extends com.oracle.truffle.api.nodes.Node> {%%0} replace({%%0},java.lang.CharSequence)
meth public final <%0 extends com.oracle.truffle.api.nodes.Node> {%%0}[] insert({%%0}[])
meth public final <%0 extends java.lang.Object> {%%0} atomic(java.util.concurrent.Callable<{%%0}>)
meth public final boolean isSafelyReplaceableBy(com.oracle.truffle.api.nodes.Node)
meth public final com.oracle.truffle.api.nodes.Node getParent()
meth public final com.oracle.truffle.api.nodes.RootNode getRootNode()
meth public final java.lang.Iterable<com.oracle.truffle.api.nodes.Node> getChildren()
meth public final void accept(com.oracle.truffle.api.nodes.NodeVisitor)
meth public final void adoptChildren()
meth public final void atomic(java.lang.Runnable)
meth public final void reportPolymorphicSpecialize()
meth public java.lang.String getDescription()
meth public java.lang.String toString()
meth public java.util.Map<java.lang.String,java.lang.Object> getDebugProperties()
supr java.lang.Object
hfds GIL_LOCK,PARENT_LIMIT,parent

CLSS public abstract interface !annotation com.oracle.truffle.api.nodes.NodeInfo
 anno 0 java.lang.annotation.Inherited()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault com.oracle.truffle.api.nodes.NodeCost cost()
meth public abstract !hasdefault java.lang.String description()
meth public abstract !hasdefault java.lang.String language()
meth public abstract !hasdefault java.lang.String shortName()

CLSS public abstract interface com.oracle.truffle.api.nodes.NodeInterface

CLSS public abstract interface java.lang.Cloneable

CLSS public abstract interface !annotation java.lang.Deprecated
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, MODULE, PARAMETER, TYPE])
intf java.lang.annotation.Annotation
meth public abstract !hasdefault boolean forRemoval()
meth public abstract !hasdefault java.lang.String since()

CLSS public abstract interface !annotation java.lang.FunctionalInterface
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[TYPE])
intf java.lang.annotation.Annotation

CLSS public java.lang.Object
cons public init()
meth protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected void finalize() throws java.lang.Throwable
 anno 0 java.lang.Deprecated(boolean forRemoval=false, java.lang.String since="9")
meth public boolean equals(java.lang.Object)
meth public final java.lang.Class<?> getClass()
meth public final void notify()
meth public final void notifyAll()
meth public final void wait() throws java.lang.InterruptedException
meth public final void wait(long) throws java.lang.InterruptedException
meth public final void wait(long,int) throws java.lang.InterruptedException
meth public int hashCode()
meth public java.lang.String toString()

CLSS public abstract interface java.lang.annotation.Annotation
meth public abstract boolean equals(java.lang.Object)
meth public abstract int hashCode()
meth public abstract java.lang.Class<? extends java.lang.annotation.Annotation> annotationType()
meth public abstract java.lang.String toString()

CLSS public abstract interface !annotation java.lang.annotation.Documented
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation java.lang.annotation.Inherited
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation

CLSS public abstract interface !annotation java.lang.annotation.Retention
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.RetentionPolicy value()

CLSS public abstract interface !annotation java.lang.annotation.Target
 anno 0 java.lang.annotation.Documented()
 anno 0 java.lang.annotation.Retention(java.lang.annotation.RetentionPolicy value=RUNTIME)
 anno 0 java.lang.annotation.Target(java.lang.annotation.ElementType[] value=[ANNOTATION_TYPE])
intf java.lang.annotation.Annotation
meth public abstract java.lang.annotation.ElementType[] value()

CLSS public abstract interface java.util.function.Predicate<%0 extends java.lang.Object>
 anno 0 java.lang.FunctionalInterface()
meth public abstract boolean test({java.util.function.Predicate%0})
meth public java.util.function.Predicate<{java.util.function.Predicate%0}> and(java.util.function.Predicate<? super {java.util.function.Predicate%0}>)
meth public java.util.function.Predicate<{java.util.function.Predicate%0}> negate()
meth public java.util.function.Predicate<{java.util.function.Predicate%0}> or(java.util.function.Predicate<? super {java.util.function.Predicate%0}>)
meth public static <%0 extends java.lang.Object> java.util.function.Predicate<{%%0}> isEqual(java.lang.Object)
meth public static <%0 extends java.lang.Object> java.util.function.Predicate<{%%0}> not(java.util.function.Predicate<? super {%%0}>)

