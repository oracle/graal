#Signature file v4.1
#Version 

CLSS public com.oracle.truffle.api.debug.Breakpoint
innr public abstract interface static ResolveListener
innr public final Builder
innr public final ExceptionBuilder
innr public final static !enum Kind
meth public boolean isDisposed()
meth public boolean isEnabled()
meth public boolean isModifiable()
meth public boolean isOneShot()
meth public boolean isResolved()
meth public com.oracle.truffle.api.debug.Breakpoint$Kind getKind()
meth public com.oracle.truffle.api.debug.SuspendAnchor getSuspendAnchor()
meth public int getHitCount()
meth public int getIgnoreCount()
meth public java.lang.String getCondition()
meth public java.lang.String getLocationDescription()
meth public java.lang.String toString()
meth public static com.oracle.truffle.api.debug.Breakpoint$Builder newBuilder(com.oracle.truffle.api.source.Source)
meth public static com.oracle.truffle.api.debug.Breakpoint$Builder newBuilder(com.oracle.truffle.api.source.SourceSection)
meth public static com.oracle.truffle.api.debug.Breakpoint$Builder newBuilder(java.net.URI)
meth public static com.oracle.truffle.api.debug.Breakpoint$ExceptionBuilder newExceptionBuilder(boolean,boolean)
meth public void dispose()
meth public void setCondition(java.lang.String)
meth public void setEnabled(boolean)
meth public void setIgnoreCount(int)
supr java.lang.Object
hfds BUILDER_INSTANCE,SOURCE_BINDING_RESOLVED,breakpointBinding,breakpointBindingAttaching,breakpointBindingReady,condition,conditionExistsUnchanged,conditionUnchanged,debugger,disposed,enabled,exceptionFilter,global,hitCount,ignoreCount,locationKey,oneShot,resolveListener,roWrapper,rootInstanceRef,sessions,sessionsUnchanged,sourceBinding,sourcePredicate,suspendAnchor
hcls AbstractBreakpointNode,BreakpointAfterNode,BreakpointAfterNodeException,BreakpointBeforeNode,BreakpointConditionFailure,BreakpointNodeFactory,ConditionalBreakNode,GlobalBreakpoint,SessionList

CLSS public final com.oracle.truffle.api.debug.Breakpoint$Builder
 outer com.oracle.truffle.api.debug.Breakpoint
meth public !varargs com.oracle.truffle.api.debug.Breakpoint$Builder sourceElements(com.oracle.truffle.api.debug.SourceElement[])
meth public com.oracle.truffle.api.debug.Breakpoint build()
meth public com.oracle.truffle.api.debug.Breakpoint$Builder columnIs(int)
meth public com.oracle.truffle.api.debug.Breakpoint$Builder ignoreCount(int)
meth public com.oracle.truffle.api.debug.Breakpoint$Builder lineIs(int)
meth public com.oracle.truffle.api.debug.Breakpoint$Builder oneShot()
meth public com.oracle.truffle.api.debug.Breakpoint$Builder resolveListener(com.oracle.truffle.api.debug.Breakpoint$ResolveListener)
meth public com.oracle.truffle.api.debug.Breakpoint$Builder rootInstance(com.oracle.truffle.api.debug.DebugValue)
meth public com.oracle.truffle.api.debug.Breakpoint$Builder suspendAnchor(com.oracle.truffle.api.debug.SuspendAnchor)
supr java.lang.Object
hfds anchor,column,ignoreCount,key,line,oneShot,resolveListener,rootInstance,sourceElements,sourceSection

CLSS public final com.oracle.truffle.api.debug.Breakpoint$ExceptionBuilder
 outer com.oracle.truffle.api.debug.Breakpoint
meth public !varargs com.oracle.truffle.api.debug.Breakpoint$ExceptionBuilder sourceElements(com.oracle.truffle.api.debug.SourceElement[])
meth public com.oracle.truffle.api.debug.Breakpoint build()
meth public com.oracle.truffle.api.debug.Breakpoint$ExceptionBuilder suspensionFilter(com.oracle.truffle.api.debug.SuspensionFilter)
supr java.lang.Object
hfds caught,sourceElements,suspensionFilter,uncaught

CLSS public final static !enum com.oracle.truffle.api.debug.Breakpoint$Kind
 outer com.oracle.truffle.api.debug.Breakpoint
fld public final static com.oracle.truffle.api.debug.Breakpoint$Kind EXCEPTION
fld public final static com.oracle.truffle.api.debug.Breakpoint$Kind HALT_INSTRUCTION
fld public final static com.oracle.truffle.api.debug.Breakpoint$Kind SOURCE_LOCATION
meth public static com.oracle.truffle.api.debug.Breakpoint$Kind valueOf(java.lang.String)
meth public static com.oracle.truffle.api.debug.Breakpoint$Kind[] values()
supr java.lang.Enum<com.oracle.truffle.api.debug.Breakpoint$Kind>
hfds VALUES

CLSS public abstract interface static com.oracle.truffle.api.debug.Breakpoint$ResolveListener
 outer com.oracle.truffle.api.debug.Breakpoint
meth public abstract void breakpointResolved(com.oracle.truffle.api.debug.Breakpoint,com.oracle.truffle.api.source.SourceSection)

CLSS public final com.oracle.truffle.api.debug.DebugContext
meth public <%0 extends java.lang.Object> {%%0} runInContext(java.util.function.Supplier<{%%0}>)
meth public com.oracle.truffle.api.debug.DebugContext getParent()
meth public com.oracle.truffle.api.debug.DebugValue evaluate(java.lang.String,java.lang.String)
supr java.lang.Object
hfds context,executionLifecycle

CLSS public abstract interface com.oracle.truffle.api.debug.DebugContextsListener
meth public abstract void contextClosed(com.oracle.truffle.api.debug.DebugContext)
meth public abstract void contextCreated(com.oracle.truffle.api.debug.DebugContext)
meth public abstract void languageContextCreated(com.oracle.truffle.api.debug.DebugContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public abstract void languageContextDisposed(com.oracle.truffle.api.debug.DebugContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public abstract void languageContextFinalized(com.oracle.truffle.api.debug.DebugContext,com.oracle.truffle.api.nodes.LanguageInfo)
meth public abstract void languageContextInitialized(com.oracle.truffle.api.debug.DebugContext,com.oracle.truffle.api.nodes.LanguageInfo)

CLSS public final com.oracle.truffle.api.debug.DebugException
innr public final static CatchLocation
meth public boolean isInternalError()
meth public com.oracle.truffle.api.debug.DebugException$CatchLocation getCatchLocation()
meth public com.oracle.truffle.api.debug.DebugValue getExceptionObject()
meth public com.oracle.truffle.api.source.SourceSection getThrowLocation()
meth public java.lang.StackTraceElement[] getStackTrace()
meth public java.lang.Throwable fillInStackTrace()
meth public java.lang.Throwable getRawException(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>)
meth public java.util.List<com.oracle.truffle.api.debug.DebugStackTraceElement> getDebugStackTrace()
meth public java.util.List<java.util.List<com.oracle.truffle.api.debug.DebugStackTraceElement>> getDebugAsynchronousStacks()
meth public void printStackTrace()
meth public void printStackTrace(java.io.PrintStream)
meth public void printStackTrace(java.io.PrintWriter)
meth public void setStackTrace(java.lang.StackTraceElement[])
supr java.lang.RuntimeException
hfds CAUSE_CAPTION,catchLocation,debugAsyncStacks,debugStackTrace,exception,isCatchNodeComputed,javaLikeStackTrace,preferredLanguage,rawStackTrace,serialVersionUID,session,suspendedEvent,throwLocation

CLSS public final static com.oracle.truffle.api.debug.DebugException$CatchLocation
 outer com.oracle.truffle.api.debug.DebugException
meth public com.oracle.truffle.api.debug.DebugStackFrame getFrame()
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
supr java.lang.Object
hfds depth,frame,frameInstance,section,session

CLSS public final com.oracle.truffle.api.debug.DebugScope
meth public boolean isFunctionScope()
meth public com.oracle.truffle.api.debug.DebugScope getParent()
meth public com.oracle.truffle.api.debug.DebugValue convertRawValue(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>,java.lang.Object)
meth public com.oracle.truffle.api.debug.DebugValue getDeclaredValue(java.lang.String)
meth public com.oracle.truffle.api.debug.DebugValue getReceiver()
meth public com.oracle.truffle.api.debug.DebugValue getRootInstance()
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
meth public java.lang.Iterable<com.oracle.truffle.api.debug.DebugValue> getArguments()
 anno 0 java.lang.Deprecated()
meth public java.lang.Iterable<com.oracle.truffle.api.debug.DebugValue> getDeclaredValues()
meth public java.lang.String getName()
supr java.lang.Object
hfds INTEROP,NODE,event,frame,language,node,parent,root,scope,session,variables
hcls SubtractedKeys,SubtractedVariables

CLSS public final com.oracle.truffle.api.debug.DebugStackFrame
meth public boolean equals(java.lang.Object)
meth public boolean isHost()
meth public boolean isInternal()
meth public com.oracle.truffle.api.debug.DebugScope getScope()
meth public com.oracle.truffle.api.debug.DebugValue eval(java.lang.String)
meth public com.oracle.truffle.api.frame.Frame getRawFrame(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>,com.oracle.truffle.api.frame.FrameInstance$FrameAccess)
meth public com.oracle.truffle.api.nodes.LanguageInfo getLanguage()
meth public com.oracle.truffle.api.nodes.Node getRawNode(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>)
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
meth public int hashCode()
meth public java.lang.StackTraceElement getHostTraceElement()
meth public java.lang.String getName()
supr java.lang.Object
hfds currentFrame,depth,event,hostTraceElement,name,nameEx

CLSS public final com.oracle.truffle.api.debug.DebugStackTraceElement
meth public boolean isHost()
meth public boolean isInternal()
meth public com.oracle.truffle.api.debug.DebugScope getScope()
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
meth public java.lang.StackTraceElement getHostTraceElement()
meth public java.lang.String getName()
supr java.lang.Object
hfds hostTraceElement,session,stackTraceElement,traceElement

CLSS public abstract interface com.oracle.truffle.api.debug.DebugThreadsListener
meth public abstract void threadDisposed(com.oracle.truffle.api.debug.DebugContext,java.lang.Thread)
meth public abstract void threadInitialized(com.oracle.truffle.api.debug.DebugContext,java.lang.Thread)

CLSS public abstract com.oracle.truffle.api.debug.DebugValue
meth public !varargs final com.oracle.truffle.api.debug.DebugValue execute(com.oracle.truffle.api.debug.DebugValue[])
meth public abstract <%0 extends java.lang.Object> {%%0} as(java.lang.Class<{%%0}>)
 anno 0 java.lang.Deprecated()
meth public abstract boolean hasReadSideEffects()
meth public abstract boolean hasWriteSideEffects()
meth public abstract boolean isInternal()
meth public abstract boolean isReadable()
meth public abstract boolean isWritable()
meth public abstract com.oracle.truffle.api.debug.DebuggerSession getSession()
meth public abstract java.lang.String getName()
meth public abstract void set(com.oracle.truffle.api.debug.DebugValue)
meth public abstract void set(java.lang.Object)
 anno 0 java.lang.Deprecated()
meth public boolean asBoolean()
meth public boolean equals(java.lang.Object)
meth public boolean fitsInByte()
meth public boolean fitsInDouble()
meth public boolean fitsInFloat()
meth public boolean fitsInInt()
meth public boolean fitsInLong()
meth public boolean fitsInShort()
meth public boolean hasHashEntries()
meth public boolean hasIterator()
meth public boolean hasIteratorNextElement()
meth public boolean isBoolean()
meth public boolean isDate()
meth public boolean isDuration()
meth public boolean isHashEntryExisting(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isHashEntryInsertable(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isHashEntryModifiable(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isHashEntryReadable(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isHashEntryRemovable(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isHashEntryWritable(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isInstant()
meth public boolean isIterator()
meth public boolean isMetaInstance(com.oracle.truffle.api.debug.DebugValue)
meth public boolean isMetaObject()
meth public boolean isNumber()
meth public boolean isString()
meth public boolean isTime()
meth public boolean isTimeZone()
meth public boolean removeHashEntry(com.oracle.truffle.api.debug.DebugValue)
meth public byte asByte()
meth public com.oracle.truffle.api.debug.DebugScope getScope()
meth public com.oracle.truffle.api.debug.DebugValue getHashEntriesIterator()
meth public com.oracle.truffle.api.debug.DebugValue getHashKeysIterator()
meth public com.oracle.truffle.api.debug.DebugValue getHashValue(com.oracle.truffle.api.debug.DebugValue)
meth public com.oracle.truffle.api.debug.DebugValue getHashValueOrDefault(com.oracle.truffle.api.debug.DebugValue,com.oracle.truffle.api.debug.DebugValue)
meth public com.oracle.truffle.api.debug.DebugValue getHashValuesIterator()
meth public com.oracle.truffle.api.debug.DebugValue getIterator()
meth public com.oracle.truffle.api.debug.DebugValue getIteratorNextElement()
meth public double asDouble()
meth public final boolean canExecute()
meth public final boolean isArray()
meth public final boolean isNull()
meth public final com.oracle.truffle.api.debug.DebugValue asInLanguage(com.oracle.truffle.api.nodes.LanguageInfo)
meth public final com.oracle.truffle.api.debug.DebugValue getMetaObject()
meth public final com.oracle.truffle.api.debug.DebugValue getProperty(java.lang.String)
meth public final com.oracle.truffle.api.nodes.LanguageInfo getOriginalLanguage()
meth public final com.oracle.truffle.api.source.SourceSection getSourceLocation()
meth public final java.lang.String asString()
meth public final java.lang.String toDisplayString()
meth public final java.lang.String toDisplayString(boolean)
meth public final java.util.Collection<com.oracle.truffle.api.debug.DebugValue> getProperties()
meth public final java.util.List<com.oracle.truffle.api.debug.Breakpoint> getRootInstanceBreakpoints()
meth public float asFloat()
meth public int asInt()
meth public int hashCode()
meth public java.lang.Object getRawValue(java.lang.Class<? extends com.oracle.truffle.api.TruffleLanguage<?>>)
meth public java.lang.String getMetaQualifiedName()
meth public java.lang.String getMetaSimpleName()
meth public java.lang.String toString()
meth public java.time.Duration asDuration()
meth public java.time.Instant asInstant()
meth public java.time.LocalDate asDate()
meth public java.time.LocalTime asTime()
meth public java.time.ZoneId asTimeZone()
meth public java.util.List<com.oracle.truffle.api.debug.DebugValue> getArray()
meth public long asLong()
meth public long getHashSize()
meth public short asShort()
meth public void putHashEntry(com.oracle.truffle.api.debug.DebugValue,com.oracle.truffle.api.debug.DebugValue)
supr java.lang.Object
hfds INTEROP,preferredLanguage
hcls AbstractDebugCachedValue,AbstractDebugValue,ArrayElementValue,HashEntriesIteratorValue,HashEntryArrayValue,HashEntryValue,HeapValue,ObjectMemberValue

CLSS public final com.oracle.truffle.api.debug.Debugger
meth public !varargs com.oracle.truffle.api.debug.DebuggerSession startSession(com.oracle.truffle.api.debug.SuspendedCallback,com.oracle.truffle.api.debug.SourceElement[])
meth public com.oracle.truffle.api.debug.Breakpoint install(com.oracle.truffle.api.debug.Breakpoint)
meth public com.oracle.truffle.api.debug.DebuggerSession startSession(com.oracle.truffle.api.debug.SuspendedCallback)
meth public int getSessionCount()
meth public java.util.List<com.oracle.truffle.api.debug.Breakpoint> getBreakpoints()
meth public static com.oracle.truffle.api.debug.Debugger find(com.oracle.truffle.api.TruffleLanguage$Env)
meth public static com.oracle.truffle.api.debug.Debugger find(com.oracle.truffle.api.instrumentation.TruffleInstrument$Env)
meth public static com.oracle.truffle.api.debug.Debugger find(org.graalvm.polyglot.Engine)
meth public void addBreakpointAddedListener(java.util.function.Consumer<com.oracle.truffle.api.debug.Breakpoint>)
meth public void addBreakpointRemovedListener(java.util.function.Consumer<com.oracle.truffle.api.debug.Breakpoint>)
meth public void removeBreakpointAddedListener(java.util.function.Consumer<com.oracle.truffle.api.debug.Breakpoint>)
meth public void removeBreakpointRemovedListener(java.util.function.Consumer<com.oracle.truffle.api.debug.Breakpoint>)
supr java.lang.Object
hfds ACCESSOR,TRACE,alwaysHaltBreakpoint,breakpointAddedListeners,breakpointRemovedListeners,breakpoints,env,propSupport,sessions
hcls AccessorDebug

CLSS public final com.oracle.truffle.api.debug.DebuggerSession
intf java.io.Closeable
meth public boolean isBreakpointsActive()
 anno 0 java.lang.Deprecated()
meth public boolean isBreakpointsActive(com.oracle.truffle.api.debug.Breakpoint$Kind)
meth public boolean suspendHere(com.oracle.truffle.api.nodes.Node)
meth public com.oracle.truffle.api.debug.Breakpoint install(com.oracle.truffle.api.debug.Breakpoint)
meth public com.oracle.truffle.api.debug.DebugScope getTopScope(java.lang.String)
meth public com.oracle.truffle.api.debug.DebugValue createPrimitiveValue(java.lang.Object,com.oracle.truffle.api.nodes.LanguageInfo)
meth public com.oracle.truffle.api.debug.Debugger getDebugger()
meth public com.oracle.truffle.api.source.Source resolveSource(com.oracle.truffle.api.source.Source)
meth public java.lang.String toString()
meth public java.util.List<com.oracle.truffle.api.debug.Breakpoint> getBreakpoints()
meth public java.util.Map<java.lang.String,? extends com.oracle.truffle.api.debug.DebugValue> getExportedSymbols()
meth public void close()
meth public void resume(java.lang.Thread)
meth public void resumeAll()
meth public void setAsynchronousStackDepth(int)
meth public void setBreakpointsActive(boolean)
 anno 0 java.lang.Deprecated()
meth public void setBreakpointsActive(com.oracle.truffle.api.debug.Breakpoint$Kind,boolean)
meth public void setContextsListener(com.oracle.truffle.api.debug.DebugContextsListener,boolean)
meth public void setShowHostStackFrames(boolean)
meth public void setSourcePath(java.lang.Iterable<java.net.URI>)
meth public void setSteppingFilter(com.oracle.truffle.api.debug.SuspensionFilter)
meth public void setThreadsListener(com.oracle.truffle.api.debug.DebugThreadsListener,boolean)
meth public void suspend(java.lang.Thread)
meth public void suspendAll()
meth public void suspendNextExecution()
supr java.lang.Object
hfds ANCHOR_SET_AFTER,ANCHOR_SET_ALL,ANCHOR_SET_BEFORE,SESSIONS,allBindings,alwaysHaltBreakpointsActive,breakpoints,breakpointsUnresolved,breakpointsUnresolvedEmpty,callback,closed,currentSuspendedEventMap,debugger,exceptionBreakpointsActive,executionLifecycle,hasExpressionElement,hasRootElement,ignoreLanguageContextInitialization,inEvalInContext,includeInternal,locationBreakpointsActive,sessionId,showHostStackFrames,sourceElements,sourceFilter,sources,stepping,strategyMap,suspendAll,suspendNext,suspensionFilterUnchanged,syntaxElementsBinding,threadSuspensions
hcls Caller,RootSteppingDepthNode,StableBoolean,SteppingNode,ThreadSuspension

CLSS public final com.oracle.truffle.api.debug.DebuggerTags
innr public final AlwaysHalt
supr java.lang.Object

CLSS public final com.oracle.truffle.api.debug.DebuggerTags$AlwaysHalt
 outer com.oracle.truffle.api.debug.DebuggerTags
supr com.oracle.truffle.api.instrumentation.Tag

CLSS public final !enum com.oracle.truffle.api.debug.SourceElement
fld public final static com.oracle.truffle.api.debug.SourceElement EXPRESSION
fld public final static com.oracle.truffle.api.debug.SourceElement ROOT
fld public final static com.oracle.truffle.api.debug.SourceElement STATEMENT
meth public static com.oracle.truffle.api.debug.SourceElement valueOf(java.lang.String)
meth public static com.oracle.truffle.api.debug.SourceElement[] values()
supr java.lang.Enum<com.oracle.truffle.api.debug.SourceElement>
hfds tag

CLSS public final com.oracle.truffle.api.debug.StepConfig
innr public final Builder
meth public static com.oracle.truffle.api.debug.StepConfig$Builder newBuilder()
supr java.lang.Object
hfds EMPTY,allElements,defaultAnchors,preferredAnchors,sourceElements,stepCount

CLSS public final com.oracle.truffle.api.debug.StepConfig$Builder
 outer com.oracle.truffle.api.debug.StepConfig
meth public !varargs com.oracle.truffle.api.debug.StepConfig$Builder sourceElements(com.oracle.truffle.api.debug.SourceElement[])
meth public !varargs com.oracle.truffle.api.debug.StepConfig$Builder suspendAnchors(com.oracle.truffle.api.debug.SourceElement,com.oracle.truffle.api.debug.SuspendAnchor[])
meth public com.oracle.truffle.api.debug.StepConfig build()
meth public com.oracle.truffle.api.debug.StepConfig$Builder count(int)
supr java.lang.Object
hfds preferredAnchors,stepCount,stepElements

CLSS public final !enum com.oracle.truffle.api.debug.SuspendAnchor
fld public final static com.oracle.truffle.api.debug.SuspendAnchor AFTER
fld public final static com.oracle.truffle.api.debug.SuspendAnchor BEFORE
meth public static com.oracle.truffle.api.debug.SuspendAnchor valueOf(java.lang.String)
meth public static com.oracle.truffle.api.debug.SuspendAnchor[] values()
supr java.lang.Enum<com.oracle.truffle.api.debug.SuspendAnchor>

CLSS public abstract interface com.oracle.truffle.api.debug.SuspendedCallback
meth public abstract void onSuspend(com.oracle.truffle.api.debug.SuspendedEvent)

CLSS public final com.oracle.truffle.api.debug.SuspendedEvent
meth public boolean hasSourceElement(com.oracle.truffle.api.debug.SourceElement)
meth public boolean isLanguageContextInitialized()
meth public com.oracle.truffle.api.debug.DebugException getException()
meth public com.oracle.truffle.api.debug.DebugStackFrame getTopStackFrame()
meth public com.oracle.truffle.api.debug.DebugValue getReturnValue()
meth public com.oracle.truffle.api.debug.DebugValue[] getInputValues()
meth public com.oracle.truffle.api.debug.DebuggerSession getSession()
meth public com.oracle.truffle.api.debug.SuspendAnchor getSuspendAnchor()
meth public com.oracle.truffle.api.debug.SuspendedEvent prepareStepInto(com.oracle.truffle.api.debug.StepConfig)
meth public com.oracle.truffle.api.debug.SuspendedEvent prepareStepInto(int)
meth public com.oracle.truffle.api.debug.SuspendedEvent prepareStepOut(com.oracle.truffle.api.debug.StepConfig)
meth public com.oracle.truffle.api.debug.SuspendedEvent prepareStepOut(int)
meth public com.oracle.truffle.api.debug.SuspendedEvent prepareStepOver(com.oracle.truffle.api.debug.StepConfig)
meth public com.oracle.truffle.api.debug.SuspendedEvent prepareStepOver(int)
meth public com.oracle.truffle.api.source.SourceSection getSourceSection()
meth public java.lang.Iterable<com.oracle.truffle.api.debug.DebugStackFrame> getStackFrames()
meth public java.lang.String toString()
meth public java.lang.Throwable getBreakpointConditionException(com.oracle.truffle.api.debug.Breakpoint)
meth public java.util.List<com.oracle.truffle.api.debug.Breakpoint> getBreakpoints()
meth public java.util.List<java.util.List<com.oracle.truffle.api.debug.DebugStackTraceElement>> getAsynchronousStacks()
meth public void prepareContinue()
meth public void prepareKill()
meth public void prepareUnwindFrame(com.oracle.truffle.api.debug.DebugStackFrame)
meth public void prepareUnwindFrame(com.oracle.truffle.api.debug.DebugStackFrame,com.oracle.truffle.api.debug.DebugValue)
meth public void setReturnValue(com.oracle.truffle.api.debug.DebugValue)
supr java.lang.Object
hfds HOST_INTEROP_NODE_NAME,breakpoints,cachedAsyncFrames,cachedFrames,conditionFailures,context,disposed,exception,inputValuesProvider,insertableNode,materializedFrame,nextStrategy,returnValue,session,sourceSection,suspendAnchor,thread
hcls DebugAsyncStackFrameLists,DebugStackFrameIterable

CLSS public final com.oracle.truffle.api.debug.SuspensionFilter
innr public final Builder
meth public boolean isIgnoreLanguageContextInitialization()
meth public static com.oracle.truffle.api.debug.SuspensionFilter$Builder newBuilder()
supr java.lang.Object
hfds ignoreLanguageContextInitialization,includeInternal,sourcePredicate

CLSS public final com.oracle.truffle.api.debug.SuspensionFilter$Builder
 outer com.oracle.truffle.api.debug.SuspensionFilter
meth public com.oracle.truffle.api.debug.SuspensionFilter build()
meth public com.oracle.truffle.api.debug.SuspensionFilter$Builder ignoreLanguageContextInitialization(boolean)
meth public com.oracle.truffle.api.debug.SuspensionFilter$Builder includeInternal(boolean)
meth public com.oracle.truffle.api.debug.SuspensionFilter$Builder sourceIs(java.util.function.Predicate<com.oracle.truffle.api.source.Source>)
supr java.lang.Object
hfds ignoreLanguageContextInitialization,includeInternal,sourcePredicate

CLSS public abstract com.oracle.truffle.api.instrumentation.Tag
cons protected init()
innr public abstract interface static !annotation Identifier
meth public static java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag> findProvidedTag(com.oracle.truffle.api.nodes.LanguageInfo,java.lang.String)
meth public static java.lang.String getIdentifier(java.lang.Class<? extends com.oracle.truffle.api.instrumentation.Tag>)
supr java.lang.Object

CLSS public abstract interface java.io.Closeable
intf java.lang.AutoCloseable
meth public abstract void close() throws java.io.IOException

CLSS public abstract interface java.io.Serializable

CLSS public abstract interface java.lang.AutoCloseable
meth public abstract void close() throws java.lang.Exception

CLSS public abstract interface java.lang.Comparable<%0 extends java.lang.Object>
meth public abstract int compareTo({java.lang.Comparable%0})

CLSS public abstract java.lang.Enum<%0 extends java.lang.Enum<{java.lang.Enum%0}>>
cons protected init(java.lang.String,int)
intf java.io.Serializable
intf java.lang.Comparable<{java.lang.Enum%0}>
meth protected final java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected final void finalize()
meth public final boolean equals(java.lang.Object)
meth public final int compareTo({java.lang.Enum%0})
meth public final int hashCode()
meth public final int ordinal()
meth public final java.lang.Class<{java.lang.Enum%0}> getDeclaringClass()
meth public final java.lang.String name()
meth public java.lang.String toString()
meth public static <%0 extends java.lang.Enum<{%%0}>> {%%0} valueOf(java.lang.Class<{%%0}>,java.lang.String)
supr java.lang.Object
hfds name,ordinal

CLSS public java.lang.Exception
cons protected init(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public init()
cons public init(java.lang.String)
cons public init(java.lang.String,java.lang.Throwable)
cons public init(java.lang.Throwable)
supr java.lang.Throwable
hfds serialVersionUID

CLSS public java.lang.Object
cons public init()
meth protected java.lang.Object clone() throws java.lang.CloneNotSupportedException
meth protected void finalize() throws java.lang.Throwable
meth public boolean equals(java.lang.Object)
meth public final java.lang.Class<?> getClass()
meth public final void notify()
meth public final void notifyAll()
meth public final void wait() throws java.lang.InterruptedException
meth public final void wait(long) throws java.lang.InterruptedException
meth public final void wait(long,int) throws java.lang.InterruptedException
meth public int hashCode()
meth public java.lang.String toString()

CLSS public java.lang.RuntimeException
cons protected init(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public init()
cons public init(java.lang.String)
cons public init(java.lang.String,java.lang.Throwable)
cons public init(java.lang.Throwable)
supr java.lang.Exception
hfds serialVersionUID

CLSS public java.lang.Throwable
cons protected init(java.lang.String,java.lang.Throwable,boolean,boolean)
cons public init()
cons public init(java.lang.String)
cons public init(java.lang.String,java.lang.Throwable)
cons public init(java.lang.Throwable)
intf java.io.Serializable
meth public final java.lang.Throwable[] getSuppressed()
meth public final void addSuppressed(java.lang.Throwable)
meth public java.lang.StackTraceElement[] getStackTrace()
meth public java.lang.String getLocalizedMessage()
meth public java.lang.String getMessage()
meth public java.lang.String toString()
meth public java.lang.Throwable fillInStackTrace()
meth public java.lang.Throwable getCause()
meth public java.lang.Throwable initCause(java.lang.Throwable)
meth public void printStackTrace()
meth public void printStackTrace(java.io.PrintStream)
meth public void printStackTrace(java.io.PrintWriter)
meth public void setStackTrace(java.lang.StackTraceElement[])
supr java.lang.Object
hfds CAUSE_CAPTION,EMPTY_THROWABLE_ARRAY,NULL_CAUSE_MESSAGE,SELF_SUPPRESSION_MESSAGE,SUPPRESSED_CAPTION,SUPPRESSED_SENTINEL,UNASSIGNED_STACK,backtrace,cause,detailMessage,serialVersionUID,stackTrace,suppressedExceptions
hcls PrintStreamOrWriter,SentinelHolder,WrappedPrintStream,WrappedPrintWriter

