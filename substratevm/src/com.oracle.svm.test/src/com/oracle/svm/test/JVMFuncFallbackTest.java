/*
 * Copyright (c) 2020, 2020, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package com.oracle.svm.test;

import org.graalvm.nativeimage.Platforms;
import org.graalvm.nativeimage.c.function.CFunction;
import org.graalvm.nativeimage.c.function.CLibrary;
import org.graalvm.nativeimage.impl.InternalPlatform;
import org.graalvm.word.Pointer;
import org.graalvm.word.WordFactory;
import org.junit.Test;

// Checkstyle: stop

@Platforms(InternalPlatform.PLATFORM_JNI.class)
public class JVMFuncFallbackTest {
    @Test
    public void testImageCodeMethods() {
        if (Boolean.getBoolean("never.be.true.but.compiler.doesn't.know")) {
            /*
             * Cause image to link to JVM_IHashCode. This will trigger a linker error if libjvm.a
             * does not contain the autogenerated JVM_* fallbacks.
             */
            Jvm.JVM_IHashCode(WordFactory.nullPointer());
        }
    }
}

@Platforms(InternalPlatform.PLATFORM_JNI.class)
@CLibrary(value = "jvm", requireStatic = true)
class Jvm {
    @CFunction(transition = CFunction.Transition.NO_TRANSITION)
    public static native int JVM_IHashCode(Pointer jni);
}
